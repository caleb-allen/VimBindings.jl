var documenterSearchIndex = {"docs":
[{"location":"features/#Features","page":"Features","title":"Features","text":"","category":"section"},{"location":"features/","page":"Features","title":"Features","text":"This document describes the features of vim emulated by VimBindings.jl.","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"info: Implementation Status Indicators\nThese symbols indicate the state of a feature✅ Implemented❌ Not implemented🚧 Planned or In Progress","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"Pages = [\"features.md\"]","category":"page"},{"location":"features/#Motions","page":"Features","title":"Motions","text":"","category":"section"},{"location":"features/","page":"Features","title":"Features","text":"Commands for moving the cursor.","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"A motion command may be prepended with a count to repeat the motion, for example the motion 3w moves 3 words to the right. ","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"Command Description Implemented\nh left ✅\nl right ✅\nj down ✅\nk up ✅\nw next word ✅\nW next WORD ✅\ne end of word ✅\nE end of WORD ✅\nb previous word ✅\nB previous WORD ✅\n^ beginning of line (excluding whitespace) ✅\n0 first character of line (including whitespace) ✅\n$ end of line ✅\nf{x} the next occurence of {x} ✅\nF{x} the Previous occurence of {x} ✅\nt{x} till before the next occurence of {x} ✅\nT{x} till after the previous occurence of {x} ✅\n% find the next item in the line and jump to its match. Items can be ([{}]) ❌\n( count sentences backward ❌\n) count sentences forward ❌\n{ count paragraphs backward ❌\n} count paragraphs forward ❌\n]] count sections forward or to the next { in the first column ❌\n][ count sections forward or to the next } in the first column ❌\n[[ count sections backward or to the previous { in the first column ❌\n[] count sections backward or to the previous } in the first column ❌","category":"page"},{"location":"features/#Operators","page":"Features","title":"Operators","text":"","category":"section"},{"location":"features/","page":"Features","title":"Features","text":"A motion can be used in after an operator to have the command operate on the text in the motion.","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"Command Description Implemented\nc change ✅\nd delete ✅\ny yank 🚧 (see issue)","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"An operator may be prepended with a count to repeat the operation. For example, 3dW will execute the dW operation 3 times.","category":"page"},{"location":"features/#Text-Objects","page":"Features","title":"Text Objects","text":"","category":"section"},{"location":"features/","page":"Features","title":"Features","text":"Text object commands can only be used after an operator. Commands that start with a select \"a\"n object including white space, the commands starting with i select an \"inner\" object without white space, or just the white space. Thus the \"inner\" commands always select less text than the \"a\" commands.","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"Definitions of text objects:","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"word: a word consists of a sequence of letters, digits and underscores, or a sequence of other non-blank characters, separated with whitespace (spaces, tabs, newline). For example, the words in the text function hello() are function, hello, and ().\nWORD: a WORD consists of a sequence of non-blank characters, separated with whitespace. For example, the WORDs in the text function hello() are function and hello().","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"Command Description Implemented\naw a word ✅\niw inner word ✅\naW a WORD ✅\niW inner WORD ✅\na]/a[ a [] block 🚧 (see issue)\ni]/i[ inner [] block 🚧\na)/a(/ab a block 🚧\ni)/i(/ib inner block 🚧\na>/a< a <> block 🚧\ni>/i< inner <> block 🚧\na}/a{/aB a Block 🚧\ni}/i{/iB inner Block 🚧\na\"/a'/a` a quoted string 🚧\ni\"/i'/i` inner quoted string 🚧\nas/is a sentence, inner sentence ❌\nap/ip a paragraph, inner paragraph ❌\nat/at a tag block, inner tag block ❌","category":"page"},{"location":"features/#Inserting-Text","page":"Features","title":"Inserting Text","text":"","category":"section"},{"location":"features/","page":"Features","title":"Features","text":"Insert commands can be used to insert new text.","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"Command Description Implemented\ni insert text before the cursor ✅\nI insert text before the first non-blank in the line ✅\na append text after the cursor ✅\nA append text at the end of the line ✅\no begin a new line below the cursor and insert text ✅\nO begin a new line above the cursor and insert text ✅\ngI insert text in column 1 ❌\ngi insert text where Insert mode was stopped last time ❌","category":"page"},{"location":"features/#Deleting-and-Changing-text","page":"Features","title":"Deleting and Changing text","text":"","category":"section"},{"location":"features/","page":"Features","title":"Features","text":"Command Description Implemented\nx delete count characters under and after the cursor. Equivalent to dl ✅\nX delete count character before the cursor. Equivalent to dh ✅\nD delete from the cursor until the end of the line. Equivalent to d$ ✅\ndd delete line ✅\nC delete from the cursor position to the end of the line and start insert. Equivalent to c$. ✅\ncc delete line and start insert ✅\ns delete the character under the cursor and start insert ✅\nS delete count lines and start insert. Equivalent to cc. ✅\nr replace the character under the cursor ✅\nR enter replace mode ❌\nJ join lines ❌","category":"page"},{"location":"features/#Undo-and-Redo","page":"Features","title":"Undo and Redo","text":"","category":"section"},{"location":"features/","page":"Features","title":"Features","text":"VimBindings.jl implements the core semantics of undo and redo as implemented by vim, with the exception that VimBindings.jl does not implement an undo tree or undo branches. Undo/redo is implemented as a list.","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"The undo and redo implementation is not vi compatible; \"uu\" will undo two times, like in vim, rather than \"undoing\" an undo as in vi.","category":"page"},{"location":"features/","page":"Features","title":"Features","text":"Command Description Implemented\nu undo count changes ✅\nC-r redo count changes ✅\nU undo the latest changes on oneline ❌","category":"page"},{"location":"features/#Miscellaneous","page":"Features","title":"Miscellaneous","text":"","category":"section"},{"location":"features/","page":"Features","title":"Features","text":"Command Description Implemented\nv start visual mode ❌\n/ search forward ❌\n? search backward ❌\nn repeat the latest \"/\" or \"?\" ❌\nN repeat the latest \"/\" or \"?\" in the opposite direction ❌\n* search forward for the word nearest to the cursor ❌\n\\# same as \"*\" but search backward ❌\nG goto line count, default last line ❌\ngg go to line count, default first line ❌\n[( go to previous unmatched '(' ❌\n[{ go to previous unmatched '{' ❌\n]) go to next unmatched ')' ❌\n]} go to next unmatched '}' ❌\n]m go to next start of a method ❌\n]M go to next end of a method ❌\n[m go to previous start of a method ❌\n[M go to previous end of a method ❌","category":"page"},{"location":"features/#Requesting-Features","page":"Features","title":"Requesting Features","text":"","category":"section"},{"location":"features/","page":"Features","title":"Features","text":"If there is a feature you would like to see implemented, please let us know by adding it to the \"Key bind request\" thread.","category":"page"},{"location":"features/#References","page":"Features","title":"References","text":"","category":"section"},{"location":"features/","page":"Features","title":"Features","text":"Many of these descriptions are adapted from the vim documentation of the respective commands.","category":"page"},{"location":"#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"VimBindings.jl is a Julia package which brings vim emulation directly to the Julia REPL. Feedback is welcome!","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Pages = [\"index.md\", \"features.md\"]","category":"page"},{"location":"#Installation","page":"Introduction","title":"Installation","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"julia> import Pkg\njulia> Pkg.add(\"VimBindings\")","category":"page"},{"location":"#Configuration","page":"Introduction","title":"Configuration","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"VimBindings.jl can be loaded from startup.jl like so:","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"# in your startup file, usually ~/.julia/config/startup.jl\nif isinteractive()\n    @eval using VimBindings\nend","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"warning: Warning\nVimBindings.jl must be loaded before the REPL is initialized. This means that the call @eval using VimBindings must not be called within atreplinit, unlike most packages.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"info: Incremental compilation warnings\nVimBindings.jl overwrites some REPL related methods in the standard library in order to add new features, causing a variety of warnings about breaking incremental compilation.Overwriting methods is not ideal (and there may be a solution which avoids this altogether), but in the meantime this should not cause issues unless you are using other packages which also heavily modify the REPL.","category":"page"},{"location":"#Usage","page":"Introduction","title":"Usage","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Start julia as normal. Once the REPL has loaded, you will see a pipe | cursor. This indicates that you are in insert mode, which is similar to the standard REPL experience.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Navigate to Normal mode by striking Esc. Normal mode is indicated with a block █ cursor. From here, you can use vim motions, text objects, operators, etc. For a full list of implemented commands, see Features.","category":"page"},{"location":"#Tmux-users","page":"Introduction","title":"Tmux users","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"A common practice for users of tmux is to set the escape-time setting of tmux to 0, often after experiencing lag while using vim from within tmux. ","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Using escape-time set to 0 may cause the VimBindings.jl library to sieze completely and become unresponsive. A higher value will fix this and won't cause noticeable lag. The technical reason for this can be seen in this issue.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Tmux users wishing to use julia with VimBindings.jl should set escape-time to a value above 0, for example:","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"# .tmux.conf\nset -g escape-time 5","category":"page"},{"location":"#Feedback","page":"Introduction","title":"Feedback","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"VimBindings.jl is early in development and likely has bugs! Issues with bug reports or general feedback is welcome.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Is your favorite vim binding missing? Add it to the \"Key bind request\" thread.","category":"page"}]
}
